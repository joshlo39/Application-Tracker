# Generated by Django 4.2.6 on 2023-11-10 01:38

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('email', models.EmailField(max_length=100)),
                ('is_applicant', models.BooleanField(default=False, verbose_name='Applicant Status')),
                ('is_manager', models.BooleanField(default=False, verbose_name='Manager Status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Internship',
            fields=[
                ('internship_id', models.AutoField(primary_key=True, serialize=False)),
                ('internship_name', models.CharField(max_length=100)),
                ('company', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('date_posted', models.DateField()),
                ('internship_status', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('job_id', models.AutoField(primary_key=True, serialize=False)),
                ('job_name', models.CharField(max_length=100)),
                ('company', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('date_posted', models.DateField(default=datetime.date.today)),
                ('job_status', multiselectfield.db.fields.MultiSelectField(choices=[('Open', 'Open'), ('Closed', 'Closed')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobInterview',
            fields=[
                ('interview_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('type_of_interview', models.CharField(max_length=100)),
                ('dsa_question', models.CharField(blank=True, max_length=100, null=True)),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quickstart.job')),
            ],
        ),
        migrations.AddField(
            model_name='job',
            name='hiring_manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quickstart.manager'),
        ),
        migrations.CreateModel(
            name='InternshipInterview',
            fields=[
                ('interview_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('type_of_interview', models.CharField(max_length=100)),
                ('dsa_question', models.CharField(blank=True, max_length=100, null=True)),
                ('internship_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quickstart.internship')),
            ],
        ),
        migrations.AddField(
            model_name='internship',
            name='hiring_manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quickstart.manager'),
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_scored', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicantJob',
            fields=[
                ('job_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='quickstart.job')),
                ('date_applied', models.DateField()),
                ('application_status', models.CharField(choices=[('Applied', 'Applied'), ('Coding Assessment', 'Coding Assessment'), ('Interview', 'Interview'), ('Offer Receieved', 'Offer Receieved'), ('Rejected', 'Rejected'), ('Ghosted', 'Ghosted')], max_length=100)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicantInternship',
            fields=[
                ('internship_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='quickstart.internship')),
                ('date_applied', models.DateField()),
                ('application_status', models.CharField(choices=[('Applied', 'Applied'), ('Coding Assessment', 'Coding Assessment'), ('Interview', 'Interview'), ('Offer Receieved', 'Offer Receieved'), ('Rejected', 'Rejected'), ('Ghosted', 'Ghosted')], max_length=100)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
